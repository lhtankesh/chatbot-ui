/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AwsData as PrismaAwsData } from "@prisma/client";

export class AwsDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AwsDataCountArgs, "select">): Promise<number> {
    return this.prisma.awsData.count(args);
  }

  async awsDataItems<T extends Prisma.AwsDataFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AwsDataFindManyArgs>
  ): Promise<PrismaAwsData[]> {
    return this.prisma.awsData.findMany<Prisma.AwsDataFindManyArgs>(args);
  }
  async awsData<T extends Prisma.AwsDataFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AwsDataFindUniqueArgs>
  ): Promise<PrismaAwsData | null> {
    return this.prisma.awsData.findUnique(args);
  }
  async createAwsData<T extends Prisma.AwsDataCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AwsDataCreateArgs>
  ): Promise<PrismaAwsData> {
    return this.prisma.awsData.create<T>(args);
  }
  async updateAwsData<T extends Prisma.AwsDataUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AwsDataUpdateArgs>
  ): Promise<PrismaAwsData> {
    return this.prisma.awsData.update<T>(args);
  }
  async deleteAwsData<T extends Prisma.AwsDataDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AwsDataDeleteArgs>
  ): Promise<PrismaAwsData> {
    return this.prisma.awsData.delete(args);
  }
}
