/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, WebhookTrigger as PrismaWebhookTrigger } from "@prisma/client";

export class WebhookTriggerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WebhookTriggerCountArgs, "select">
  ): Promise<number> {
    return this.prisma.webhookTrigger.count(args);
  }

  async webhookTriggers<T extends Prisma.WebhookTriggerFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.WebhookTriggerFindManyArgs>
  ): Promise<PrismaWebhookTrigger[]> {
    return this.prisma.webhookTrigger.findMany<Prisma.WebhookTriggerFindManyArgs>(
      args
    );
  }
  async webhookTrigger<T extends Prisma.WebhookTriggerFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.WebhookTriggerFindUniqueArgs>
  ): Promise<PrismaWebhookTrigger | null> {
    return this.prisma.webhookTrigger.findUnique(args);
  }
  async createWebhookTrigger<T extends Prisma.WebhookTriggerCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WebhookTriggerCreateArgs>
  ): Promise<PrismaWebhookTrigger> {
    return this.prisma.webhookTrigger.create<T>(args);
  }
  async updateWebhookTrigger<T extends Prisma.WebhookTriggerUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WebhookTriggerUpdateArgs>
  ): Promise<PrismaWebhookTrigger> {
    return this.prisma.webhookTrigger.update<T>(args);
  }
  async deleteWebhookTrigger<T extends Prisma.WebhookTriggerDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.WebhookTriggerDeleteArgs>
  ): Promise<PrismaWebhookTrigger> {
    return this.prisma.webhookTrigger.delete(args);
  }
}
